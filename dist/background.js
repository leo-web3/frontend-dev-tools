var BackgroundScript=function(){"use strict";var y=Object.defineProperty;var v=(s,o,c)=>o in s?y(s,o,{enumerable:!0,configurable:!0,writable:!0,value:c}):s[o]=c;var d=(s,o,c)=>(v(s,typeof o!="symbol"?o+"":o,c),c);const s={ENVIRONMENTS:"environments",CORS_SETTINGS:"corsSettings",UI_COMPARISONS:"uiComparisons",GLOBAL_SETTINGS:"globalSettings",LAST_ACTIVE_TAB:"lastActiveTab"},o={enabled:!1,allowedOrigins:["*"],allowedMethods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization","X-Requested-With"],credentials:!1},c={variables:[],globalEnabled:!1,autoInject:!0},T={theme:"light",language:"zh",lastActiveTab:"environment",shortcuts:{toggleCors:"Ctrl+Shift+C",toggleEnvironment:"Ctrl+Shift+E",toggleUIComparator:"Ctrl+Shift+U"}},A={STORAGE_ERROR:"STORAGE_ERROR",PERMISSION_ERROR:"PERMISSION_ERROR",NETWORK_ERROR:"NETWORK_ERROR",FILE_ERROR:"FILE_ERROR",VALIDATION_ERROR:"VALIDATION_ERROR",CORS_ERROR:"CORS_ERROR",ENVIRONMENT_ERROR:"ENVIRONMENT_ERROR",UI_OVERLAY_ERROR:"UI_OVERLAY_ERROR"},i={INJECT_ENVIRONMENT:"INJECT_ENVIRONMENT",CREATE_OVERLAY:"CREATE_OVERLAY",UPDATE_OVERLAY:"UPDATE_OVERLAY",REMOVE_OVERLAY:"REMOVE_OVERLAY",TOGGLE_OVERLAY_VISIBILITY:"TOGGLE_OVERLAY_VISIBILITY",CORS_STATUS_CHANGED:"CORS_STATUS_CHANGED",GET_CURRENT_TAB:"GET_CURRENT_TAB",ADJUST_BROWSER_SIZE:"ADJUST_BROWSER_SIZE",SAVE_CONFIG:"SAVE_CONFIG",LOAD_CONFIG:"LOAD_CONFIG"},R={ACCESS_CONTROL_ALLOW_ORIGIN:"Access-Control-Allow-Origin",ACCESS_CONTROL_ALLOW_METHODS:"Access-Control-Allow-Methods",ACCESS_CONTROL_ALLOW_HEADERS:"Access-Control-Allow-Headers",ACCESS_CONTROL_ALLOW_CREDENTIALS:"Access-Control-Allow-Credentials",ACCESS_CONTROL_MAX_AGE:"Access-Control-Max-Age"};function _(E){try{return new URL(E).hostname}catch{return""}}function l(E,e,r){const t=new Error(E);return t.code=A[e],t.context=r,t}const u=class u{static getInstance(){return u.instance||(u.instance=new u),u.instance}async get(e){try{return(await(e==="uiComparisons"?chrome.storage.local:chrome.storage.sync).get(e))[e]||this.getDefaultValue(e)}catch{throw l(`Failed to retrieve ${e} from storage`,"STORAGE_ERROR","StorageManager.get")}}async set(e,r){try{await(e==="uiComparisons"?chrome.storage.local:chrome.storage.sync).set({[e]:r})}catch{throw l(`Failed to save ${e} to storage`,"STORAGE_ERROR","StorageManager.set")}}async update(e,r){try{const t=await this.get(e),a=this.mergeDeep(t,r);await this.set(e,a)}catch{throw l(`Failed to update ${e} in storage`,"STORAGE_ERROR","StorageManager.update")}}async getAll(){try{const[e,r]=await Promise.all([chrome.storage.sync.get(null),chrome.storage.local.get(["uiComparisons"])]);return{...e,...r}}catch{throw l("Failed to retrieve all storage data","STORAGE_ERROR","StorageManager.getAll")}}async clear(){try{await Promise.all([chrome.storage.sync.clear(),chrome.storage.local.clear()])}catch{throw l("Failed to clear storage","STORAGE_ERROR","StorageManager.clear")}}async remove(e){try{await(e==="uiComparisons"?chrome.storage.local:chrome.storage.sync).remove(e)}catch{throw l(`Failed to remove ${e} from storage`,"STORAGE_ERROR","StorageManager.remove")}}async getUsage(){try{const[e,r]=await Promise.all([chrome.storage.sync.getBytesInUse(),chrome.storage.local.getBytesInUse()]);return{bytesInUse:e+r,quotaBytes:chrome.storage.sync.QUOTA_BYTES+chrome.storage.local.QUOTA_BYTES}}catch{throw l("Failed to get storage usage","STORAGE_ERROR","StorageManager.getUsage")}}async exportData(){try{const e=await this.getAll();return JSON.stringify(e,null,2)}catch{throw l("Failed to export storage data","STORAGE_ERROR","StorageManager.exportData")}}async importData(e){try{const r=JSON.parse(e);if(!this.validateImportData(r))throw new Error("Invalid data format");await chrome.storage.sync.clear(),await chrome.storage.sync.set(r)}catch{throw l("Failed to import storage data","STORAGE_ERROR","StorageManager.importData")}}onChanged(e){chrome.storage.onChanged.addListener((r,t)=>{t==="sync"&&e(r)})}getDefaultValue(e){switch(e){case s.ENVIRONMENTS:return{};case s.CORS_SETTINGS:return o;case s.UI_COMPARISONS:return{};case s.GLOBAL_SETTINGS:return T;default:return{}}}mergeDeep(e,r){if(!r||typeof r!="object")return e;const t={...e};for(const a in r)if(Object.prototype.hasOwnProperty.call(r,a)){const n=r[a],m=t[a];n&&typeof n=="object"&&!Array.isArray(n)?t[a]=this.mergeDeep(m,n):t[a]=n}return t}validateImportData(e){if(!e||typeof e!="object")return!1;const r=Object.values(s);for(const t in e)r.includes(t);return!0}};d(u,"instance");let S=u;const g=S.getInstance();class w{async injectEnvironmentVariables(e,r){try{const t=r.filter(a=>a.enabled);return t.length===0?{success:!0,data:"No enabled variables to inject"}:(await chrome.scripting.executeScript({target:{tabId:e},func:this.injectVariablesScript,args:[t]}),{success:!0,data:`Injected ${t.length} environment variables`})}catch(t){return{success:!1,error:t instanceof Error?t.message:"Injection failed"}}}async injectForDomain(e,r){try{const a=(await g.get(s.ENVIRONMENTS))[r]||c;return a.globalEnabled?await this.injectEnvironmentVariables(e,a.variables):{success:!1,error:"Environment variables are disabled for this domain"}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Domain injection failed"}}}async saveEnvironmentConfig(e,r){try{const t=await g.get(s.ENVIRONMENTS);return t[e]=r,await g.set(s.ENVIRONMENTS,t),{success:!0,data:"Environment configuration saved"}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Save failed"}}}async getEnvironmentConfig(e){try{return(await g.get(s.ENVIRONMENTS))[e]||c}catch{return c}}async addEnvironmentVariable(e,r){try{const t=await this.getEnvironmentConfig(e),a=t.variables.findIndex(n=>n.key===r.key);return a>=0?t.variables[a]=r:t.variables.push(r),await this.saveEnvironmentConfig(e,t)}catch(t){return{success:!1,error:t instanceof Error?t.message:"Add failed"}}}async removeEnvironmentVariable(e,r){try{const t=await this.getEnvironmentConfig(e);return t.variables=t.variables.filter(a=>a.key!==r),await this.saveEnvironmentConfig(e,t)}catch(t){return{success:!1,error:t instanceof Error?t.message:"Remove failed"}}}async toggleEnvironmentVariable(e,r){try{const t=await this.getEnvironmentConfig(e),a=t.variables.find(n=>n.key===r);return a?(a.enabled=!a.enabled,await this.saveEnvironmentConfig(e,t)):{success:!1,error:"Environment variable not found"}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Toggle failed"}}}async toggleGlobalEnvironment(e,r){try{const t=await this.getEnvironmentConfig(e);return t.globalEnabled=r,await this.saveEnvironmentConfig(e,t)}catch(t){return{success:!1,error:t instanceof Error?t.message:"Toggle failed"}}}async autoInjectForTab(e,r){try{const t=_(r),a=await this.getEnvironmentConfig(t);a.globalEnabled&&a.autoInject&&await this.injectEnvironmentVariables(e,a.variables)}catch{}}injectVariablesScript(e){window.env||(window.env={}),e.forEach(r=>{window.env[r.key]=r.value,window.process||(window.process={env:{}}),window.process.env[r.key]=r.value}),window.dispatchEvent(new CustomEvent("fe-dev-tools-env-injected",{detail:{variables:e.map(r=>({key:r.key,value:r.value})),timestamp:Date.now()}}))}}class I{constructor(){d(this,"isEnabled",!1);d(this,"config",o);this.initialize()}async initialize(){try{this.config=await g.get(s.CORS_SETTINGS),this.isEnabled=this.config.enabled,this.isEnabled&&this.enableCorsInterception()}catch{}}async toggleCors(e){try{return e===this.isEnabled?{success:!0,data:`CORS is already ${e?"enabled":"disabled"}`}:(this.isEnabled=e,this.config.enabled=e,await g.set(s.CORS_SETTINGS,this.config),e?this.enableCorsInterception():this.disableCorsInterception(),this.notifyTabsOfChange(),{success:!0,data:`CORS ${e?"enabled":"disabled"}`})}catch(r){return{success:!1,error:r instanceof Error?r.message:"CORS toggle failed"}}}async updateConfig(e){try{return this.config={...this.config,...e},await g.set(s.CORS_SETTINGS,this.config),this.isEnabled&&(this.disableCorsInterception(),this.enableCorsInterception()),{success:!0,data:"CORS configuration updated"}}catch(r){return{success:!1,error:r instanceof Error?r.message:"Config update failed"}}}async getStatus(){return this.isEnabled}async getConfig(){return this.config}enableCorsInterception(){}disableCorsInterception(){}onBeforeSendHeaders(e){if(!this.isEnabled)return;const r=e.requestHeaders||[];return!r.some(a=>a.name.toLowerCase()==="origin")&&e.initiator&&r.push({name:"Origin",value:e.initiator}),{requestHeaders:r}}onHeadersReceived(e){if(!this.isEnabled)return;const t=(e.responseHeaders||[]).filter(n=>{const m=n.name.toLowerCase();return!Object.values(R).some(f=>f.toLowerCase()===m)}),a=this.generateCorsHeaders(e.initiator);return t.push(...a),{responseHeaders:t}}generateCorsHeaders(e){const r=[],t=this.getAllowedOrigin(e);return r.push({name:R.ACCESS_CONTROL_ALLOW_ORIGIN,value:t}),r.push({name:R.ACCESS_CONTROL_ALLOW_METHODS,value:this.config.allowedMethods.join(", ")}),r.push({name:R.ACCESS_CONTROL_ALLOW_HEADERS,value:this.config.allowedHeaders.join(", ")}),this.config.credentials&&r.push({name:R.ACCESS_CONTROL_ALLOW_CREDENTIALS,value:"true"}),r.push({name:R.ACCESS_CONTROL_MAX_AGE,value:"86400"}),r}getAllowedOrigin(e){return this.config.allowedOrigins.includes("*")?"*":e&&this.config.allowedOrigins.includes(e)?e:this.config.allowedOrigins.length>0?this.config.allowedOrigins[0]:"*"}notifyTabsOfChange(){chrome.tabs.query({},e=>{e.forEach(r=>{r.id&&chrome.tabs.sendMessage(r.id,{type:"CORS_STATUS_CHANGED",payload:{enabled:this.isEnabled}},()=>{chrome.runtime.lastError})})})}}chrome.runtime.onInstalled.addListener(async()=>{try{await g.get(s.CORS_SETTINGS)}catch{await g.set(s.CORS_SETTINGS,o)}});const h=class h{constructor(){d(this,"environmentManager");d(this,"corsHandler");this.environmentManager=new w,this.corsHandler=new I,this.initializeMessageListeners(),this.initializeContextMenus(),this.initializeTabListeners()}static getInstance(){return h.instance||(h.instance=new h),h.instance}initializeMessageListeners(){chrome.runtime.onMessage.addListener((e,r,t)=>(this.handleMessage(e,r).then(t),!0))}async handleMessage(e,r){var t;try{const{type:a,payload:n,tabId:m}=e,f=m||((t=r.tab)==null?void 0:t.id);switch(a){case i.INJECT_ENVIRONMENT:return await this.environmentManager.injectEnvironmentVariables(f,n);case i.CORS_STATUS_CHANGED:return await this.corsHandler.toggleCors(n.enabled);case i.GET_CURRENT_TAB:return await this.getCurrentTabInfo();case i.ADJUST_BROWSER_SIZE:return await this.adjustBrowserSize(n.width,n.height);case i.CREATE_OVERLAY:case i.UPDATE_OVERLAY:case i.REMOVE_OVERLAY:case i.TOGGLE_OVERLAY_VISIBILITY:return await this.forwardToContentScript(e,f);case i.SAVE_CONFIG:case i.LOAD_CONFIG:return await this.handleConfigMessage(e);default:throw new Error(`Unknown message type: ${a}`)}}catch(a){return{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}async getCurrentTabInfo(){return new Promise(e=>{chrome.tabs.query({active:!0,currentWindow:!0},r=>{const t=r[0];e(t?{success:!0,data:{id:t.id,url:t.url,title:t.title}}:{success:!1,error:"No active tab found"})})})}async adjustBrowserSize(e,r){try{return new Promise(t=>{chrome.windows.getCurrent(a=>{if(chrome.runtime.lastError){t({success:!1,error:`Failed to get current window: ${chrome.runtime.lastError.message}`});return}a!=null&&a.id?chrome.windows.update(a.id,{width:e,height:r},n=>{chrome.runtime.lastError?t({success:!1,error:`Failed to update window: ${chrome.runtime.lastError.message}`}):t({success:!0,data:{width:n==null?void 0:n.width,height:n==null?void 0:n.height}})}):t({success:!1,error:"No current window found"})})})}catch(t){return{success:!1,error:t instanceof Error?t.message:"Unexpected error"}}}async forwardToContentScript(e,r){return new Promise(t=>{chrome.tabs.sendMessage(r,e,a=>{chrome.runtime.lastError?t({success:!1,error:chrome.runtime.lastError.message}):t(a||{success:!0})})})}async handleConfigMessage(e){return{success:!0,data:null}}initializeContextMenus(){chrome.runtime.onInstalled.addListener(()=>{try{chrome.contextMenus.create({id:"fe-dev-tools-main",title:"Frontend Dev Tools",contexts:["page"]}),chrome.contextMenus.create({id:"toggle-cors",parentId:"fe-dev-tools-main",title:"Toggle CORS",contexts:["page"]}),chrome.contextMenus.create({id:"inject-env",parentId:"fe-dev-tools-main",title:"Inject Environment Variables",contexts:["page"]})}catch{}}),chrome.contextMenus&&chrome.contextMenus.onClicked&&chrome.contextMenus.onClicked.addListener(async(e,r)=>{try{if(!(r!=null&&r.id))return;switch(e.menuItemId){case"toggle-cors":const t=await this.corsHandler.getStatus();await this.corsHandler.toggleCors(!t);break;case"inject-env":const a=new URL(r.url).hostname;await this.environmentManager.injectForDomain(r.id,a);break}}catch{}})}initializeTabListeners(){chrome.tabs&&chrome.tabs.onUpdated&&chrome.tabs.onUpdated.addListener(async(e,r,t)=>{try{r.status==="complete"&&t.url&&await this.environmentManager.autoInjectForTab(e,t.url)}catch{}}),chrome.tabs&&chrome.tabs.onCreated&&chrome.tabs.onCreated.addListener(async e=>{try{e.url&&e.id&&await this.environmentManager.autoInjectForTab(e.id,e.url)}catch{}})}initialize(){}cleanup(){}};d(h,"instance");let C=h,O;try{O=C.getInstance(),O.initialize()}catch{}try{chrome.runtime.onStartup.addListener(()=>{})}catch{}try{chrome.runtime.onSuspend.addListener(()=>{O==null||O.cleanup()})}catch{}return O}();
